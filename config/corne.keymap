/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        TAB_L_0 {
            bindings = <&kp TAB>;
            key-positions = <1 2 3>;
            layers = <0>;
        };

        ENTER_L_0 {
            bindings = <&kp ENTER>;
            key-positions = <3 5 4>;
            layers = <0>;
        };

        ESC_L_0 {
            bindings = <&kp ESCAPE>;
            key-positions = <25 26 27>;
            layers = <0>;
        };

        VolUp_R_0 {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <8 9>;
            layers = <0>;
        };

        VolDown_R_0 {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <7 8>;
            layers = <0>;
        };

        LShift_L {
            bindings = <&kp LSHIFT>;
            key-positions = <13 14>;
            layers = <0 7 6 1 11>;
        };

        LCtrl_L {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <14 15>;
            layers = <0 1 6 7 11>;
        };

        LAlt_L {
            bindings = <&kp LEFT_ALT>;
            key-positions = <15 16>;
            layers = <0 6 7 11 1>;
        };

        LGUI_L {
            bindings = <&kp LEFT_GUI>;
            key-positions = <16 17>;
            layers = <0 1 6 7 11>;
        };

        RShift_R {
            bindings = <&kp RSHIFT>;
            key-positions = <22 21>;
            layers = <0 3 5 8 11>;
        };

        LCtrl_R {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <21 20>;
            layers = <0 3 5 8 11>;
        };

        LAlt_R {
            bindings = <&kp LEFT_ALT>;
            key-positions = <20 19>;
            layers = <0 3 5 8 11>;
        };

        LGUI_R {
            bindings = <&kp LEFT_GUI>;
            key-positions = <19 18>;
            layers = <0 3 5 8 11>;
        };

        Set_TO_0 {
            bindings = <&to 0>;
            key-positions = <38 39>;
        };

        mo_L_func {
            bindings = <&mo 7>;
            key-positions = <37 16>;
            layers = <0>;
        };

        mo_R_func {
            bindings = <&mo 8>;
            key-positions = <40 19>;
            layers = <0>;
        };

        mo_L_nav {
            bindings = <&mo 4>;
            key-positions = <15 37>;
            layers = <0>;
        };

        mo_R_num {
            bindings = <&mo 5>;
            key-positions = <40 20>;
            layers = <0>;
        };

        mo_L_modi {
            bindings = <&mo 9>;
            key-positions = <37 14>;
            layers = <0>;
        };

        mo_R_modi {
            bindings = <&mo 10>;
            key-positions = <40 21>;
            layers = <0>;
        };

        mo_L_brk {
            bindings = <&mo 6>;
            key-positions = <37 29>;
            layers = <0>;
        };

        RAlt_L {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <13 37>;
            layers = <0>;
        };

        Caps_L {
            bindings = <&kp CAPSLOCK>;
            key-positions = <27 37>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        LR_default {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E   &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D   &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C   &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &none
                     &mo 13  &mo 1  &kp SPACE    &kp RET  &mo 2  &mo 3
            >;
        };

        L_num {
            bindings = <
&none  &kp MINUS     &kp EQUAL     &kp BACKSPACE  &kp DELETE    &kp SLASH       &trans  &trans  &trans  &trans  &trans  &none
&none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &kp NUMBER_4  &kp NUMBER_5    &trans  &trans  &trans  &trans  &trans  &none
&none  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8   &kp NUMBER_9  &kp NUMBER_0    &trans  &trans  &trans  &trans  &trans  &none
                                   &trans         &trans        &trans          &trans  &trans  &trans
            >;
        };

        R_nav {
            bindings = <
&none  &trans  &trans  &trans  &trans  &trans    &kp TAB        &trans          &kp UP_ARROW    &trans           &kp ESCAPE  &none
&none  &trans  &trans  &trans  &trans  &trans    &kp PAGE_UP    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp HOME    &none
&none  &trans  &trans  &trans  &trans  &trans    &kp PAGE_DOWN  &kp INSERT      &kp BACKSPACE   &kp DELETE       &kp END     &none
                       &trans  &trans  &trans    &trans         &trans          &trans
            >;
        };

        R_brk {
            bindings = <
&none  &trans  &trans  &trans  &trans  &trans    &kp ASTERISK  &kp GRAVE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH      &none
&none  &trans  &trans  &trans  &trans  &trans    &kp MINUS     &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp LEFT_BRACKET       &kp RIGHT_BRACKET  &none
&none  &trans  &trans  &trans  &trans  &trans    &kp EQUAL     &kp APOS        &trans                &trans                 &trans             &none
                       &trans  &trans  &trans    &trans        &trans          &trans
            >;
        };

        L_nav {
            bindings = <
&none  &kp TAB        &none           &kp UP_ARROW    &none            &kp ESCAPE    &trans  &trans  &trans  &trans  &trans  &none
&none  &kp PAGE_UP    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp HOME      &trans  &trans  &trans  &trans  &trans  &none
&none  &kp PAGE_DOWN  &kp INSERT      &kp BACKSPACE   &kp DELETE       &kp END       &trans  &trans  &trans  &trans  &trans  &none
                                      &trans          &trans           &trans        &trans  &trans  &trans
            >;
        };

        R_num {
            bindings = <
&none  &trans  &trans  &trans  &trans  &trans    &kp MINUS     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp COMMA  &none
&none  &trans  &trans  &trans  &trans  &trans    &kp EQUAL     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp DOT    &none
&none  &trans  &trans  &trans  &trans  &trans    &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH  &none
                       &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };

        L_brk {
            bindings = <
&none  &kp GRAVE      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp COMMA  &kp DOT         &trans  &trans  &trans  &trans  &trans  &none
&none  &kp APOS       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EQUAL  &kp ASTERISK    &trans  &trans  &trans  &trans  &trans  &none
&none  &kp BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp MINUS  &kp SLASH       &trans  &trans  &trans  &trans  &trans  &none
                                            &trans                 &trans     &trans          &trans  &trans  &trans
            >;
        };

        L_func {
            bindings = <
&none  &kp F11  &kp F12  &none   &kp KP_NUMLOCK  &kp CAPSLOCK    &trans  &trans  &trans  &trans  &trans  &none
&none  &kp F1   &kp F2   &kp F3  &kp F4          &kp F5          &trans  &trans  &trans  &trans  &trans  &none
&none  &kp F6   &kp F7   &kp F8  &kp F9          &kp F10         &trans  &trans  &trans  &trans  &trans  &none
                         &trans  &trans          &trans          &trans  &trans  &trans
            >;
        };

        R_func {
            bindings = <
&none  &trans  &trans  &trans  &trans  &trans    &kp F11  &kp F12  &none   &kp KP_NUMLOCK  &kp CAPSLOCK  &none
&none  &trans  &trans  &trans  &trans  &trans    &kp F1   &kp F2   &kp F3  &kp F4          &kp F5        &none
&none  &trans  &trans  &trans  &trans  &trans    &kp F6   &kp F7   &kp F8  &kp F9          &kp F10       &none
                       &trans  &trans  &trans    &trans   &trans   &trans
            >;
        };

        L_modi {
            bindings = <
&none  &kp TAB     &trans            &trans        &trans    &trans    &trans  &trans  &trans  &trans  &trans  &none
&none  &kp LSHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LGUI  &trans    &trans  &trans  &trans  &trans  &trans  &none
&none  &kp ESCAPE  &trans            &trans        &trans    &trans    &trans  &trans  &trans  &trans  &trans  &none
                                     &trans        &trans    &trans    &trans  &trans  &trans
            >;
        };

        R_modi {
            bindings = <
&none  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans            &kp TAB     &none
&none  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp RSHIFT  &none
&none  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans            &kp ESCAPE  &none
                       &trans  &trans  &trans    &trans  &trans        &trans
            >;
        };

        LR_mouse {
            bindings = <
&none  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans    &trans          &trans          &mmv MOVE_UP    &trans           &trans           &none
&none  &trans  &trans     &trans     &trans     &trans    &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_LEFT   &none
&none  &trans  &trans     &trans     &trans     &trans    &msc SCRL_DOWN  &mkp LCLK       &mkp MCLK       &mkp RCLK        &msc SCRL_RIGHT  &none
                          &trans     &trans     &trans    &trans          &trans          &trans
            >;
        };

        L_numsp {
            bindings = <
&none  &kp LS(MINUS)     &kp LS(EQUAL)     &kp BACKSPACE     &kp DELETE        &kp LS(SLASH)       &trans  &trans  &trans  &trans  &trans  &none
&none  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)    &trans  &trans  &trans  &trans  &trans  &none
&none  &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(NUMBER_0)    &trans  &trans  &trans  &trans  &trans  &none
                                           &trans            &trans            &trans              &trans  &trans  &trans
            >;
        };

        R_media {
            bindings = <
&none  &trans  &trans  &trans  &trans  &trans    &none   &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none       &none
&none  &trans  &trans  &trans  &trans  &trans    &none   &none       &none              &kp C_PREV       &kp C_NEXT  &none
&none  &trans  &trans  &trans  &trans  &trans    &none   &none       &none              &kp C_STOP       &kp C_PLAY  &none
                       &trans  &trans  &trans    &trans  &trans      &trans
            >;
        };
    };
};
